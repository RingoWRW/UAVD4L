#ifndef POSELIB_H
#define POSELIB_H

#include <PoseLib/version.h>
#include <string>

//
// Autogenerated lisf of #include <...>
// based on the .h header files in PoseLib/ folder
//
#include <PoseLib/solvers/gp3p.h>
#include <PoseLib/solvers/gp4ps.h>
#include <PoseLib/solvers/p1p2ll.h>
#include <PoseLib/solvers/p2p1ll.h>
#include <PoseLib/solvers/p2p2pl.h>
#include <PoseLib/solvers/p3ll.h>
#include <PoseLib/solvers/p3p.h>
#include <PoseLib/solvers/p4pf.h>
#include <PoseLib/solvers/p5lp_radial.h>
#include <PoseLib/solvers/p6lp.h>
#include <PoseLib/solvers/ugp2p.h>
#include <PoseLib/solvers/ugp3ps.h>
#include <PoseLib/solvers/up1p2pl.h>
#include <PoseLib/solvers/up2p.h>
#include <PoseLib/solvers/up4pl.h>
#include <PoseLib/solvers/ugp4pl.h>
#include <PoseLib/solvers/relpose_upright_3pt.h>
#include <PoseLib/solvers/relpose_upright_planar_2pt.h>
#include <PoseLib/solvers/relpose_upright_planar_3pt.h>
#include <PoseLib/solvers/relpose_8pt.h>
#include <PoseLib/solvers/relpose_5pt.h>
#include <PoseLib/solvers/relpose_7pt.h>
#include <PoseLib/solvers/gen_relpose_upright_4pt.h>
#include <PoseLib/solvers/gen_relpose_5p1pt.h>
#include <PoseLib/solvers/gen_relpose_6pt.h>
#include <PoseLib/solvers/homography_4pt.h>
#include <PoseLib/misc/quaternion.h>
#include <PoseLib/misc/colmap_models.h>
#include <PoseLib/robust.h>
#include <PoseLib/types.h>
#include <PoseLib/camera_pose.h>
#include <PoseLib/robust/ransac.h>
#include <PoseLib/robust/ransac_impl.h>
#include <PoseLib/robust/bundle.h>
#include <PoseLib/robust/utils.h>
#include <PoseLib/robust/sampling.h>
#include <PoseLib/robust/estimators/absolute_pose.h>
#include <PoseLib/robust/estimators/relative_pose.h>
#include <PoseLib/robust/estimators/hybrid_pose.h>
#include <PoseLib/robust/estimators/homography.h>



// Print PoseLib version and buidling type
std::string poselib_info(void) {
    #if (POSELIB_DEBUG)
        const std::string build_type = "DEBUG";
    #else
        const std::string build_type = "RELEASE";
    #endif

    return "PoseLib library version "
           + std::string(POSELIB_VERSION)
           + " (" + build_type + ")";
}

#endif  // POSELIB_H
